/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mdsd.ztz.text.behaviourLanguage;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>EObject</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see hu.bme.mdsd.ztz.text.behaviourLanguage.BehaviourLanguagePackage#getEObject()
 * @model
 * @generated
 */
public enum EObject implements Enumerator
{
  /**
   * The '<em><b>Ready</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #READY_VALUE
   * @generated
   * @ordered
   */
  READY(0, "Ready", "RobotReady"),

  /**
   * The '<em><b>Turned Off</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TURNED_OFF_VALUE
   * @generated
   * @ordered
   */
  TURNED_OFF(1, "TurnedOff", "RobotTurnedOff"),

  /**
   * The '<em><b>Waiting</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #WAITING_VALUE
   * @generated
   * @ordered
   */
  WAITING(2, "Waiting", "RobotWaiting"),

  /**
   * The '<em><b>Executing</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #EXECUTING_VALUE
   * @generated
   * @ordered
   */
  EXECUTING(3, "Executing", "RobotExecuting"),

  /**
   * The '<em><b>Finished</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #FINISHED_VALUE
   * @generated
   * @ordered
   */
  FINISHED(4, "Finished", "TaskFinished"),

  /**
   * The '<em><b>Suspended</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SUSPENDED_VALUE
   * @generated
   * @ordered
   */
  SUSPENDED(5, "Suspended", "TaskSuspended"),

  /**
   * The '<em><b>In Progress</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #IN_PROGRESS_VALUE
   * @generated
   * @ordered
   */
  IN_PROGRESS(6, "InProgress", "TaskInProgress");

  /**
   * The '<em><b>Ready</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Ready</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #READY
   * @model name="Ready" literal="RobotReady"
   * @generated
   * @ordered
   */
  public static final int READY_VALUE = 0;

  /**
   * The '<em><b>Turned Off</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Turned Off</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #TURNED_OFF
   * @model name="TurnedOff" literal="RobotTurnedOff"
   * @generated
   * @ordered
   */
  public static final int TURNED_OFF_VALUE = 1;

  /**
   * The '<em><b>Waiting</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Waiting</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #WAITING
   * @model name="Waiting" literal="RobotWaiting"
   * @generated
   * @ordered
   */
  public static final int WAITING_VALUE = 2;

  /**
   * The '<em><b>Executing</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Executing</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #EXECUTING
   * @model name="Executing" literal="RobotExecuting"
   * @generated
   * @ordered
   */
  public static final int EXECUTING_VALUE = 3;

  /**
   * The '<em><b>Finished</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Finished</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #FINISHED
   * @model name="Finished" literal="TaskFinished"
   * @generated
   * @ordered
   */
  public static final int FINISHED_VALUE = 4;

  /**
   * The '<em><b>Suspended</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>Suspended</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #SUSPENDED
   * @model name="Suspended" literal="TaskSuspended"
   * @generated
   * @ordered
   */
  public static final int SUSPENDED_VALUE = 5;

  /**
   * The '<em><b>In Progress</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of '<em><b>In Progress</b></em>' literal object isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @see #IN_PROGRESS
   * @model name="InProgress" literal="TaskInProgress"
   * @generated
   * @ordered
   */
  public static final int IN_PROGRESS_VALUE = 6;

  /**
   * An array of all the '<em><b>EObject</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final EObject[] VALUES_ARRAY =
    new EObject[]
    {
      READY,
      TURNED_OFF,
      WAITING,
      EXECUTING,
      FINISHED,
      SUSPENDED,
      IN_PROGRESS,
    };

  /**
   * A public read-only list of all the '<em><b>EObject</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<EObject> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>EObject</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EObject get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      EObject result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>EObject</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EObject getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      EObject result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>EObject</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static EObject get(int value)
  {
    switch (value)
    {
      case READY_VALUE: return READY;
      case TURNED_OFF_VALUE: return TURNED_OFF;
      case WAITING_VALUE: return WAITING;
      case EXECUTING_VALUE: return EXECUTING;
      case FINISHED_VALUE: return FINISHED;
      case SUSPENDED_VALUE: return SUSPENDED;
      case IN_PROGRESS_VALUE: return IN_PROGRESS;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EObject(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //EObject
