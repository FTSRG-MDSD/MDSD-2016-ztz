/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mdsd.ztz.text.behaviourLanguage.impl;

import hu.bme.mdsd.ztz.model.behaviour.BehaviourPackage;

import hu.bme.mdsd.ztz.model.drone.DronePackage;

import hu.bme.mdsd.ztz.text.behaviourLanguage.ActionDeclarationStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.ActionImplementation;
import hu.bme.mdsd.ztz.text.behaviourLanguage.ActionStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.AllTarget;
import hu.bme.mdsd.ztz.text.behaviourLanguage.AtomicStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.BehaviourLanguage;
import hu.bme.mdsd.ztz.text.behaviourLanguage.BehaviourLanguageFactory;
import hu.bme.mdsd.ztz.text.behaviourLanguage.BehaviourLanguagePackage;
import hu.bme.mdsd.ztz.text.behaviourLanguage.CollaborationStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.Condition;
import hu.bme.mdsd.ztz.text.behaviourLanguage.ConditionalStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.DetectionStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.EObject;
import hu.bme.mdsd.ztz.text.behaviourLanguage.ExecutionStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.Import;
import hu.bme.mdsd.ztz.text.behaviourLanguage.MeasureComparable;
import hu.bme.mdsd.ztz.text.behaviourLanguage.MessageStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.MessageTarget;
import hu.bme.mdsd.ztz.text.behaviourLanguage.MultiTarget;
import hu.bme.mdsd.ztz.text.behaviourLanguage.RobotStatusStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.Statement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.StatusStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.SynchronousStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.TaskStatusStatement;
import hu.bme.mdsd.ztz.text.behaviourLanguage.UniTarget;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class BehaviourLanguagePackageImpl extends EPackageImpl implements BehaviourLanguagePackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviourLanguageEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass atomicStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionalStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass synchronousStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass actionDeclarationStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass actionStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass actionImplementationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass messageStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass collaborationStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass detectionStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass executionStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statusStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass robotStatusStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass taskStatusStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass messageTargetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass uniTargetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass multiTargetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass allTargetEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass measureComparableEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum eObjectEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see hu.bme.mdsd.ztz.text.behaviourLanguage.BehaviourLanguagePackage#eNS_URI
   * @see #init()
   * @generated
   */
  private BehaviourLanguagePackageImpl()
  {
    super(eNS_URI, BehaviourLanguageFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link BehaviourLanguagePackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static BehaviourLanguagePackage init()
  {
    if (isInited) return (BehaviourLanguagePackage)EPackage.Registry.INSTANCE.getEPackage(BehaviourLanguagePackage.eNS_URI);

    // Obtain or create and register package
    BehaviourLanguagePackageImpl theBehaviourLanguagePackage = (BehaviourLanguagePackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof BehaviourLanguagePackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new BehaviourLanguagePackageImpl());

    isInited = true;

    // Initialize simple dependencies
    BehaviourPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theBehaviourLanguagePackage.createPackageContents();

    // Initialize created meta-data
    theBehaviourLanguagePackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theBehaviourLanguagePackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(BehaviourLanguagePackage.eNS_URI, theBehaviourLanguagePackage);
    return theBehaviourLanguagePackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getBehaviourLanguage()
  {
    return behaviourLanguageEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBehaviourLanguage_ImportModel()
  {
    return (EReference)behaviourLanguageEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBehaviourLanguage_Container()
  {
    return (EReference)behaviourLanguageEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getBehaviourLanguage_Statements()
  {
    return (EReference)behaviourLanguageEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getImport()
  {
    return importEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getImport_ImportURI()
  {
    return (EAttribute)importEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStatement()
  {
    return statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAtomicStatement()
  {
    return atomicStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getConditionalStatement()
  {
    return conditionalStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getConditionalStatement_Condition()
  {
    return (EReference)conditionalStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getConditionalStatement_Statements()
  {
    return (EReference)conditionalStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getConditionalStatement_OtherStatements()
  {
    return (EReference)conditionalStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getSynchronousStatement()
  {
    return synchronousStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getSynchronousStatement_Statements()
  {
    return (EReference)synchronousStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getActionDeclarationStatement()
  {
    return actionDeclarationStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getActionDeclarationStatement_Name()
  {
    return (EAttribute)actionDeclarationStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getActionDeclarationStatement_Properties()
  {
    return (EReference)actionDeclarationStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getActionStatement()
  {
    return actionStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getActionStatement_Robot()
  {
    return (EReference)actionStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getActionStatement_Action()
  {
    return (EReference)actionStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getActionStatement_Moreactions()
  {
    return (EReference)actionStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getActionImplementation()
  {
    return actionImplementationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getActionImplementation_Declaration()
  {
    return (EReference)actionImplementationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getActionImplementation_CurrentTaskExecution()
  {
    return (EReference)actionImplementationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getActionImplementation_Properties()
  {
    return (EReference)actionImplementationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getActionImplementation_Targets()
  {
    return (EReference)actionImplementationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMessageStatement()
  {
    return messageStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMessageStatement_Robot()
  {
    return (EReference)messageStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMessageStatement_Target()
  {
    return (EReference)messageStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMessageStatement_Message()
  {
    return (EReference)messageStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCollaborationStatement()
  {
    return collaborationStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCollaborationStatement_Robot()
  {
    return (EReference)collaborationStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCollaborationStatement_Collaboration()
  {
    return (EReference)collaborationStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDetectionStatement()
  {
    return detectionStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDetectionStatement_Robot()
  {
    return (EReference)detectionStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDetectionStatement_Object()
  {
    return (EReference)detectionStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDetectionStatement_Obstacle()
  {
    return (EAttribute)detectionStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getExecutionStatement()
  {
    return executionStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getExecutionStatement_Robot()
  {
    return (EReference)executionStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getExecutionStatement_Execution()
  {
    return (EReference)executionStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getStatusStatement()
  {
    return statusStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getStatusStatement_Status()
  {
    return (EAttribute)statusStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRobotStatusStatement()
  {
    return robotStatusStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRobotStatusStatement_Robot()
  {
    return (EReference)robotStatusStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTaskStatusStatement()
  {
    return taskStatusStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTaskStatusStatement_Task()
  {
    return (EReference)taskStatusStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMessageTarget()
  {
    return messageTargetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getUniTarget()
  {
    return uniTargetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getUniTarget_Target()
  {
    return (EReference)uniTargetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMultiTarget()
  {
    return multiTargetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMultiTarget_Target()
  {
    return (EReference)multiTargetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getAllTarget()
  {
    return allTargetEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getAllTarget_Target()
  {
    return (EAttribute)allTargetEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCondition()
  {
    return conditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCondition_LeftTask()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCondition_Compare()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCondition_RightStatus()
  {
    return (EAttribute)conditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCondition_LeftRobot()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCondition_LeftMeasure()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCondition_RightMeasure()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getMeasureComparable()
  {
    return measureComparableEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMeasureComparable_Container()
  {
    return (EReference)measureComparableEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMeasureComparable_Member()
  {
    return (EReference)measureComparableEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getMeasureComparable_Value()
  {
    return (EReference)measureComparableEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EEnum getEObject()
  {
    return eObjectEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BehaviourLanguageFactory getBehaviourLanguageFactory()
  {
    return (BehaviourLanguageFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    behaviourLanguageEClass = createEClass(BEHAVIOUR_LANGUAGE);
    createEReference(behaviourLanguageEClass, BEHAVIOUR_LANGUAGE__IMPORT_MODEL);
    createEReference(behaviourLanguageEClass, BEHAVIOUR_LANGUAGE__CONTAINER);
    createEReference(behaviourLanguageEClass, BEHAVIOUR_LANGUAGE__STATEMENTS);

    importEClass = createEClass(IMPORT);
    createEAttribute(importEClass, IMPORT__IMPORT_URI);

    statementEClass = createEClass(STATEMENT);

    atomicStatementEClass = createEClass(ATOMIC_STATEMENT);

    conditionalStatementEClass = createEClass(CONDITIONAL_STATEMENT);
    createEReference(conditionalStatementEClass, CONDITIONAL_STATEMENT__CONDITION);
    createEReference(conditionalStatementEClass, CONDITIONAL_STATEMENT__STATEMENTS);
    createEReference(conditionalStatementEClass, CONDITIONAL_STATEMENT__OTHER_STATEMENTS);

    synchronousStatementEClass = createEClass(SYNCHRONOUS_STATEMENT);
    createEReference(synchronousStatementEClass, SYNCHRONOUS_STATEMENT__STATEMENTS);

    actionDeclarationStatementEClass = createEClass(ACTION_DECLARATION_STATEMENT);
    createEAttribute(actionDeclarationStatementEClass, ACTION_DECLARATION_STATEMENT__NAME);
    createEReference(actionDeclarationStatementEClass, ACTION_DECLARATION_STATEMENT__PROPERTIES);

    actionStatementEClass = createEClass(ACTION_STATEMENT);
    createEReference(actionStatementEClass, ACTION_STATEMENT__ROBOT);
    createEReference(actionStatementEClass, ACTION_STATEMENT__ACTION);
    createEReference(actionStatementEClass, ACTION_STATEMENT__MOREACTIONS);

    actionImplementationEClass = createEClass(ACTION_IMPLEMENTATION);
    createEReference(actionImplementationEClass, ACTION_IMPLEMENTATION__DECLARATION);
    createEReference(actionImplementationEClass, ACTION_IMPLEMENTATION__CURRENT_TASK_EXECUTION);
    createEReference(actionImplementationEClass, ACTION_IMPLEMENTATION__PROPERTIES);
    createEReference(actionImplementationEClass, ACTION_IMPLEMENTATION__TARGETS);

    messageStatementEClass = createEClass(MESSAGE_STATEMENT);
    createEReference(messageStatementEClass, MESSAGE_STATEMENT__ROBOT);
    createEReference(messageStatementEClass, MESSAGE_STATEMENT__TARGET);
    createEReference(messageStatementEClass, MESSAGE_STATEMENT__MESSAGE);

    collaborationStatementEClass = createEClass(COLLABORATION_STATEMENT);
    createEReference(collaborationStatementEClass, COLLABORATION_STATEMENT__ROBOT);
    createEReference(collaborationStatementEClass, COLLABORATION_STATEMENT__COLLABORATION);

    detectionStatementEClass = createEClass(DETECTION_STATEMENT);
    createEReference(detectionStatementEClass, DETECTION_STATEMENT__ROBOT);
    createEReference(detectionStatementEClass, DETECTION_STATEMENT__OBJECT);
    createEAttribute(detectionStatementEClass, DETECTION_STATEMENT__OBSTACLE);

    executionStatementEClass = createEClass(EXECUTION_STATEMENT);
    createEReference(executionStatementEClass, EXECUTION_STATEMENT__ROBOT);
    createEReference(executionStatementEClass, EXECUTION_STATEMENT__EXECUTION);

    statusStatementEClass = createEClass(STATUS_STATEMENT);
    createEAttribute(statusStatementEClass, STATUS_STATEMENT__STATUS);

    robotStatusStatementEClass = createEClass(ROBOT_STATUS_STATEMENT);
    createEReference(robotStatusStatementEClass, ROBOT_STATUS_STATEMENT__ROBOT);

    taskStatusStatementEClass = createEClass(TASK_STATUS_STATEMENT);
    createEReference(taskStatusStatementEClass, TASK_STATUS_STATEMENT__TASK);

    messageTargetEClass = createEClass(MESSAGE_TARGET);

    uniTargetEClass = createEClass(UNI_TARGET);
    createEReference(uniTargetEClass, UNI_TARGET__TARGET);

    multiTargetEClass = createEClass(MULTI_TARGET);
    createEReference(multiTargetEClass, MULTI_TARGET__TARGET);

    allTargetEClass = createEClass(ALL_TARGET);
    createEAttribute(allTargetEClass, ALL_TARGET__TARGET);

    conditionEClass = createEClass(CONDITION);
    createEReference(conditionEClass, CONDITION__LEFT_TASK);
    createEAttribute(conditionEClass, CONDITION__COMPARE);
    createEAttribute(conditionEClass, CONDITION__RIGHT_STATUS);
    createEReference(conditionEClass, CONDITION__LEFT_ROBOT);
    createEReference(conditionEClass, CONDITION__LEFT_MEASURE);
    createEReference(conditionEClass, CONDITION__RIGHT_MEASURE);

    measureComparableEClass = createEClass(MEASURE_COMPARABLE);
    createEReference(measureComparableEClass, MEASURE_COMPARABLE__CONTAINER);
    createEReference(measureComparableEClass, MEASURE_COMPARABLE__MEMBER);
    createEReference(measureComparableEClass, MEASURE_COMPARABLE__VALUE);

    // Create enums
    eObjectEEnum = createEEnum(EOBJECT);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    BehaviourPackage theBehaviourPackage = (BehaviourPackage)EPackage.Registry.INSTANCE.getEPackage(BehaviourPackage.eNS_URI);
    DronePackage theDronePackage = (DronePackage)EPackage.Registry.INSTANCE.getEPackage(DronePackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    atomicStatementEClass.getESuperTypes().add(this.getStatement());
    conditionalStatementEClass.getESuperTypes().add(this.getStatement());
    synchronousStatementEClass.getESuperTypes().add(this.getStatement());
    actionDeclarationStatementEClass.getESuperTypes().add(this.getStatement());
    actionStatementEClass.getESuperTypes().add(this.getAtomicStatement());
    messageStatementEClass.getESuperTypes().add(this.getAtomicStatement());
    collaborationStatementEClass.getESuperTypes().add(this.getAtomicStatement());
    detectionStatementEClass.getESuperTypes().add(this.getAtomicStatement());
    executionStatementEClass.getESuperTypes().add(this.getAtomicStatement());
    statusStatementEClass.getESuperTypes().add(this.getAtomicStatement());
    robotStatusStatementEClass.getESuperTypes().add(this.getStatusStatement());
    taskStatusStatementEClass.getESuperTypes().add(this.getStatusStatement());
    uniTargetEClass.getESuperTypes().add(this.getMessageTarget());
    multiTargetEClass.getESuperTypes().add(this.getMessageTarget());
    allTargetEClass.getESuperTypes().add(this.getMessageTarget());

    // Initialize classes and features; add operations and parameters
    initEClass(behaviourLanguageEClass, BehaviourLanguage.class, "BehaviourLanguage", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBehaviourLanguage_ImportModel(), this.getImport(), null, "importModel", null, 0, 1, BehaviourLanguage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviourLanguage_Container(), theBehaviourPackage.getBehaviourContainer(), null, "container", null, 0, 1, BehaviourLanguage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviourLanguage_Statements(), this.getStatement(), null, "statements", null, 0, -1, BehaviourLanguage.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importEClass, Import.class, "Import", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getImport_ImportURI(), ecorePackage.getEString(), "importURI", null, 0, 1, Import.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statementEClass, Statement.class, "Statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(atomicStatementEClass, AtomicStatement.class, "AtomicStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(conditionalStatementEClass, ConditionalStatement.class, "ConditionalStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getConditionalStatement_Condition(), this.getCondition(), null, "condition", null, 0, -1, ConditionalStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConditionalStatement_Statements(), this.getStatement(), null, "statements", null, 0, -1, ConditionalStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getConditionalStatement_OtherStatements(), this.getStatement(), null, "otherStatements", null, 0, -1, ConditionalStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(synchronousStatementEClass, SynchronousStatement.class, "SynchronousStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSynchronousStatement_Statements(), this.getAtomicStatement(), null, "statements", null, 0, -1, SynchronousStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(actionDeclarationStatementEClass, ActionDeclarationStatement.class, "ActionDeclarationStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getActionDeclarationStatement_Name(), ecorePackage.getEString(), "name", null, 0, 1, ActionDeclarationStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getActionDeclarationStatement_Properties(), theDronePackage.getPropertyKey(), null, "properties", null, 0, -1, ActionDeclarationStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(actionStatementEClass, ActionStatement.class, "ActionStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getActionStatement_Robot(), theBehaviourPackage.getDynamicRobot(), null, "robot", null, 0, 1, ActionStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getActionStatement_Action(), this.getActionImplementation(), null, "action", null, 0, 1, ActionStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getActionStatement_Moreactions(), this.getActionImplementation(), null, "moreactions", null, 0, -1, ActionStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(actionImplementationEClass, ActionImplementation.class, "ActionImplementation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getActionImplementation_Declaration(), this.getActionDeclarationStatement(), null, "declaration", null, 0, 1, ActionImplementation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getActionImplementation_CurrentTaskExecution(), theBehaviourPackage.getTaskExecution(), null, "currentTaskExecution", null, 0, 1, ActionImplementation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getActionImplementation_Properties(), theDronePackage.getProperty(), null, "properties", null, 0, -1, ActionImplementation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getActionImplementation_Targets(), theDronePackage.getAreaObject(), null, "targets", null, 0, -1, ActionImplementation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(messageStatementEClass, MessageStatement.class, "MessageStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMessageStatement_Robot(), theBehaviourPackage.getDynamicRobot(), null, "robot", null, 0, 1, MessageStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMessageStatement_Target(), this.getMessageTarget(), null, "target", null, 0, 1, MessageStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMessageStatement_Message(), theBehaviourPackage.getMessage(), null, "message", null, 0, 1, MessageStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(collaborationStatementEClass, CollaborationStatement.class, "CollaborationStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCollaborationStatement_Robot(), theBehaviourPackage.getDynamicRobot(), null, "robot", null, 0, 1, CollaborationStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCollaborationStatement_Collaboration(), theBehaviourPackage.getRobotCollaboration(), null, "collaboration", null, 0, -1, CollaborationStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(detectionStatementEClass, DetectionStatement.class, "DetectionStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDetectionStatement_Robot(), theBehaviourPackage.getDynamicRobot(), null, "robot", null, 0, 1, DetectionStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDetectionStatement_Object(), theDronePackage.getAreaObject(), null, "object", null, 0, 1, DetectionStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDetectionStatement_Obstacle(), ecorePackage.getEBoolean(), "obstacle", null, 0, 1, DetectionStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(executionStatementEClass, ExecutionStatement.class, "ExecutionStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getExecutionStatement_Robot(), theBehaviourPackage.getDynamicRobot(), null, "robot", null, 0, 1, ExecutionStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getExecutionStatement_Execution(), theBehaviourPackage.getTaskExecution(), null, "execution", null, 0, 1, ExecutionStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statusStatementEClass, StatusStatement.class, "StatusStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStatusStatement_Status(), this.getEObject(), "status", null, 0, 1, StatusStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(robotStatusStatementEClass, RobotStatusStatement.class, "RobotStatusStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRobotStatusStatement_Robot(), theBehaviourPackage.getDynamicRobot(), null, "robot", null, 0, 1, RobotStatusStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(taskStatusStatementEClass, TaskStatusStatement.class, "TaskStatusStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTaskStatusStatement_Task(), theBehaviourPackage.getTaskExecution(), null, "task", null, 0, 1, TaskStatusStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(messageTargetEClass, MessageTarget.class, "MessageTarget", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(uniTargetEClass, UniTarget.class, "UniTarget", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUniTarget_Target(), theBehaviourPackage.getDynamicRobot(), null, "target", null, 0, 1, UniTarget.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(multiTargetEClass, MultiTarget.class, "MultiTarget", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMultiTarget_Target(), theBehaviourPackage.getDynamicRobot(), null, "target", null, 0, -1, MultiTarget.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(allTargetEClass, AllTarget.class, "AllTarget", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAllTarget_Target(), ecorePackage.getEString(), "target", null, 0, 1, AllTarget.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditionEClass, Condition.class, "Condition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCondition_LeftTask(), theBehaviourPackage.getTaskExecution(), null, "leftTask", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCondition_Compare(), ecorePackage.getEString(), "compare", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCondition_RightStatus(), this.getEObject(), "rightStatus", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCondition_LeftRobot(), theBehaviourPackage.getDynamicRobot(), null, "leftRobot", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCondition_LeftMeasure(), this.getMeasureComparable(), null, "leftMeasure", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCondition_RightMeasure(), this.getMeasureComparable(), null, "rightMeasure", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(measureComparableEClass, MeasureComparable.class, "MeasureComparable", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMeasureComparable_Container(), theBehaviourPackage.getDynamicRobot(), null, "container", null, 0, 1, MeasureComparable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMeasureComparable_Member(), theDronePackage.getPropertyKey(), null, "member", null, 0, 1, MeasureComparable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMeasureComparable_Value(), theDronePackage.getPropertyValue(), null, "value", null, 0, 1, MeasureComparable.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(eObjectEEnum, EObject.class, "EObject");
    addEEnumLiteral(eObjectEEnum, EObject.READY);
    addEEnumLiteral(eObjectEEnum, EObject.TURNED_OFF);
    addEEnumLiteral(eObjectEEnum, EObject.WAITING);
    addEEnumLiteral(eObjectEEnum, EObject.EXECUTING);
    addEEnumLiteral(eObjectEEnum, EObject.FINISHED);
    addEEnumLiteral(eObjectEEnum, EObject.SUSPENDED);
    addEEnumLiteral(eObjectEEnum, EObject.IN_PROGRESS);

    // Create resource
    createResource(eNS_URI);
  }

} //BehaviourLanguagePackageImpl
