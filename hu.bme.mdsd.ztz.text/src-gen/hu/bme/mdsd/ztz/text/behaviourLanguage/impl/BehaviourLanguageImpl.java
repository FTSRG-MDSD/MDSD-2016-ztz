/**
 * generated by Xtext 2.9.2
 */
package hu.bme.mdsd.ztz.text.behaviourLanguage.impl;

import hu.bme.mdsd.ztz.model.behaviour.BehaviourContainer;

import hu.bme.mdsd.ztz.text.behaviourLanguage.BehaviourLanguage;
import hu.bme.mdsd.ztz.text.behaviourLanguage.BehaviourLanguagePackage;
import hu.bme.mdsd.ztz.text.behaviourLanguage.Import;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Behaviour Language</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link hu.bme.mdsd.ztz.text.behaviourLanguage.impl.BehaviourLanguageImpl#getImportModel <em>Import Model</em>}</li>
 *   <li>{@link hu.bme.mdsd.ztz.text.behaviourLanguage.impl.BehaviourLanguageImpl#getContainer <em>Container</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BehaviourLanguageImpl extends MinimalEObjectImpl.Container implements BehaviourLanguage
{
  /**
   * The cached value of the '{@link #getImportModel() <em>Import Model</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportModel()
   * @generated
   * @ordered
   */
  protected Import importModel;

  /**
   * The cached value of the '{@link #getContainer() <em>Container</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContainer()
   * @generated
   * @ordered
   */
  protected BehaviourContainer container;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BehaviourLanguageImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BehaviourLanguagePackage.Literals.BEHAVIOUR_LANGUAGE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Import getImportModel()
  {
    return importModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetImportModel(Import newImportModel, NotificationChain msgs)
  {
    Import oldImportModel = importModel;
    importModel = newImportModel;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__IMPORT_MODEL, oldImportModel, newImportModel);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImportModel(Import newImportModel)
  {
    if (newImportModel != importModel)
    {
      NotificationChain msgs = null;
      if (importModel != null)
        msgs = ((InternalEObject)importModel).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__IMPORT_MODEL, null, msgs);
      if (newImportModel != null)
        msgs = ((InternalEObject)newImportModel).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__IMPORT_MODEL, null, msgs);
      msgs = basicSetImportModel(newImportModel, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__IMPORT_MODEL, newImportModel, newImportModel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BehaviourContainer getContainer()
  {
    return container;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetContainer(BehaviourContainer newContainer, NotificationChain msgs)
  {
    BehaviourContainer oldContainer = container;
    container = newContainer;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__CONTAINER, oldContainer, newContainer);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setContainer(BehaviourContainer newContainer)
  {
    if (newContainer != container)
    {
      NotificationChain msgs = null;
      if (container != null)
        msgs = ((InternalEObject)container).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__CONTAINER, null, msgs);
      if (newContainer != null)
        msgs = ((InternalEObject)newContainer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__CONTAINER, null, msgs);
      msgs = basicSetContainer(newContainer, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__CONTAINER, newContainer, newContainer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__IMPORT_MODEL:
        return basicSetImportModel(null, msgs);
      case BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__CONTAINER:
        return basicSetContainer(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__IMPORT_MODEL:
        return getImportModel();
      case BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__CONTAINER:
        return getContainer();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__IMPORT_MODEL:
        setImportModel((Import)newValue);
        return;
      case BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__CONTAINER:
        setContainer((BehaviourContainer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__IMPORT_MODEL:
        setImportModel((Import)null);
        return;
      case BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__CONTAINER:
        setContainer((BehaviourContainer)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__IMPORT_MODEL:
        return importModel != null;
      case BehaviourLanguagePackage.BEHAVIOUR_LANGUAGE__CONTAINER:
        return container != null;
    }
    return super.eIsSet(featureID);
  }

} //BehaviourLanguageImpl
